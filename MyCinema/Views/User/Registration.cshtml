@model MyCinema.Models.Users

@{
                /**/

                ViewBag.Title = "Registration";
                Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
<link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,500,600,700,700i" rel="stylesheet">
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" type="text/css" rel="stylesheet"
      media="screen" />


@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{


    <div class="alert-success">
        @ViewBag.Message
        @TempData["ErrorMessage"]
    </div>

}
else
{

    using (Html.BeginForm())
    {
        if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">

                @TempData["ErrorMessage"]
            </div>
        }



        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "" })
            <div class="firstname-lastname-container">
                <div class="firstname">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { placeholder = "First Name", @class = "firstname" } })

                </div>

                <div class="lastname">

                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { placeholder = "Last Name", @class = "lastname" } })

                </div>
            </div>


            <div class="firstname-lastname-container">

                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { placeholder = "Email", @class = "lastname" } })


            </div>

            <div class="firstname-lastname-container">

                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { placeholder = "Username", @class = "lastname" } })


            </div>



            <div class="firstname-lastname-container">

                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { placeholder = "Password", @class = "lastname" } })


            </div>

            <div class="firstname-lastname-container">

                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { placeholder = "Confirm password", @class = "lastname" } })


            </div>



            <div class="button-container">
                <input type="submit" value="Submit" class="button" />
            </div>
        </div>

    }
}

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script src="../../Scripts/script.js"></script>

<script src="../../Scripts/alert.js"></script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
